"""add_user_session_preferences_and_missing_fields

Revision ID: 354b390f94e2
Revises: 71a95b2551bd
Create Date: 2025-08-22 21:56:09.704272

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '354b390f94e2'
down_revision: Union[str, None] = '71a95b2551bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_preferences',
    sa.Column('user_uuid', sa.String(length=36), nullable=False, comment='Reference to user'),
    sa.Column('fortune_types', sa.Text(), nullable=True, comment='Preferred fortune types as JSON array'),
    sa.Column('notification_time', sa.String(length=5), nullable=True, comment='Notification time in HH:MM format'),
    sa.Column('theme', sa.String(length=20), nullable=False, comment='UI theme preference'),
    sa.Column('language', sa.String(length=5), nullable=False, comment='Language preference'),
    sa.Column('timezone', sa.String(length=50), nullable=False, comment='Timezone preference'),
    sa.Column('privacy_settings', sa.Text(), nullable=True, comment='Privacy settings as JSON'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('uuid', sa.String(length=36), nullable=False, comment='External UUID identifier'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_uuid'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.create_index('idx_user_preferences_user_uuid', ['user_uuid'], unique=False)

    op.create_table('user_sessions',
    sa.Column('session_id', sa.String(length=100), nullable=False, comment='Unique session identifier'),
    sa.Column('user_uuid', sa.String(length=36), nullable=False, comment='Reference to user'),
    sa.Column('session_type', sa.String(length=20), nullable=False, comment='Type of session (web, mobile, etc.)'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='Session expiration time'),
    sa.Column('last_activity', sa.DateTime(), nullable=True, comment='Last activity in this session'),
    sa.Column('ended_at', sa.DateTime(), nullable=True, comment='Session end time'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Session status'),
    sa.Column('session_metadata', sa.Text(), nullable=True, comment='Session metadata as JSON'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('uuid', sa.String(length=36), nullable=False, comment='External UUID identifier'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_user_sessions_active', ['is_active', 'expires_at'], unique=False)
        batch_op.create_index('idx_user_sessions_session_id', ['session_id'], unique=False)
        batch_op.create_index('idx_user_sessions_type', ['session_type'], unique=False)
        batch_op.create_index('idx_user_sessions_user_uuid', ['user_uuid'], unique=False)

    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index('idx_chat_messages_content_type', ['content_type'], unique=False)
        batch_op.create_index('idx_chat_messages_created', ['created_at'], unique=False)
        batch_op.create_index('idx_chat_messages_sender', ['sender_type'], unique=False)
        batch_op.create_index('idx_chat_messages_session_created', ['session_id', 'created_at'], unique=False)
        batch_op.create_index('idx_chat_messages_session_id', ['session_id'], unique=False)

    with op.batch_alter_table('chat_sessions', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_index('idx_chat_sessions_active', ['is_active'], unique=False)
        batch_op.create_index('idx_chat_sessions_created', ['started_at'], unique=False)
        batch_op.create_index('idx_chat_sessions_expires', ['expires_at'], unique=False)
        batch_op.create_index('idx_chat_sessions_session_id', ['session_id'], unique=False)
        batch_op.create_index('idx_chat_sessions_status', ['status'], unique=False)
        batch_op.create_index('idx_chat_sessions_user_status', ['user_uuid', 'status'], unique=False)
        batch_op.create_index('idx_chat_sessions_user_uuid', ['user_uuid'], unique=False)

    with op.batch_alter_table('fortune_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_fortune_sessions_cache', ['cached_until'], unique=False)
        batch_op.create_index('idx_fortune_sessions_created', ['created_at'], unique=False)
        batch_op.create_index('idx_fortune_sessions_fortune_id', ['fortune_id'], unique=False)
        batch_op.create_index('idx_fortune_sessions_session_id', ['session_id'], unique=False)
        batch_op.create_index('idx_fortune_sessions_type', ['fortune_type'], unique=False)
        batch_op.create_index('idx_fortune_sessions_user_type', ['user_uuid', 'fortune_type'], unique=False)
        batch_op.create_index('idx_fortune_sessions_user_uuid', ['user_uuid'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_access', sa.DateTime(), nullable=True, comment='Last access timestamp'))
        batch_op.add_column(sa.Column('access_count', sa.Integer(), nullable=False, comment='Number of times user has accessed the service'))
        batch_op.add_column(sa.Column('is_anonymous', sa.Boolean(), nullable=False, comment='Whether this is an anonymous user'))
        batch_op.create_index('idx_users_active', ['is_active', 'is_deleted'], unique=False)
        batch_op.create_index('idx_users_birth_date', ['birth_date'], unique=False)
        batch_op.create_index('idx_users_last_active', ['last_active_at'], unique=False)
        batch_op.create_index('idx_users_uuid', ['uuid'], unique=False)
        batch_op.create_index('idx_users_zodiac', ['zodiac_sign'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_users_zodiac')
        batch_op.drop_index('idx_users_uuid')
        batch_op.drop_index('idx_users_last_active')
        batch_op.drop_index('idx_users_birth_date')
        batch_op.drop_index('idx_users_active')
        batch_op.drop_column('is_anonymous')
        batch_op.drop_column('access_count')
        batch_op.drop_column('last_access')

    with op.batch_alter_table('fortune_sessions', schema=None) as batch_op:
        batch_op.drop_index('idx_fortune_sessions_user_uuid')
        batch_op.drop_index('idx_fortune_sessions_user_type')
        batch_op.drop_index('idx_fortune_sessions_type')
        batch_op.drop_index('idx_fortune_sessions_session_id')
        batch_op.drop_index('idx_fortune_sessions_fortune_id')
        batch_op.drop_index('idx_fortune_sessions_created')
        batch_op.drop_index('idx_fortune_sessions_cache')

    with op.batch_alter_table('chat_sessions', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_sessions_user_uuid')
        batch_op.drop_index('idx_chat_sessions_user_status')
        batch_op.drop_index('idx_chat_sessions_status')
        batch_op.drop_index('idx_chat_sessions_session_id')
        batch_op.drop_index('idx_chat_sessions_expires')
        batch_op.drop_index('idx_chat_sessions_created')
        batch_op.drop_index('idx_chat_sessions_active')
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)

    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_messages_session_id')
        batch_op.drop_index('idx_chat_messages_session_created')
        batch_op.drop_index('idx_chat_messages_sender')
        batch_op.drop_index('idx_chat_messages_created')
        batch_op.drop_index('idx_chat_messages_content_type')

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.drop_index('idx_user_sessions_user_uuid')
        batch_op.drop_index('idx_user_sessions_type')
        batch_op.drop_index('idx_user_sessions_session_id')
        batch_op.drop_index('idx_user_sessions_active')

    op.drop_table('user_sessions')
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.drop_index('idx_user_preferences_user_uuid')

    op.drop_table('user_preferences')
    # ### end Alembic commands ###